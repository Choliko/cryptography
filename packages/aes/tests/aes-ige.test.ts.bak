import AES_IGE from "../src/modes/ige";

test('aes-ige | decrypt', () => {
  const cipherText = new Uint32Array([
    0x28A92FE2, 0x0173B347, 0xA8BB324B, 0x5FAB2667, 0xC9A8BBCE, 0x6468D5B5, 0x09A4CBDD, 0xC186240A, 0xC912CF70, 0x06AF8926, 0xDE606A2E,
    0x74C0493C, 0xAA57741E, 0x6C82451F, 0x54D3E068, 0xF5CCC49B, 0x4444124B, 0x9666FFB4, 0x05AAB564, 0xA3D01E67, 0xF6E91286, 0x7C8D20D9,
    0x882707DC, 0x330B17B4, 0xE0DD57CB, 0x53BFAAFA, 0x9EF5BE76, 0xAE6C1B9B, 0x6C51E2D6, 0x502A47C8, 0x83095C46, 0xC81E3BE2, 0x5F62427B,
    0x585488BB, 0x3BF23921, 0x3BF48EB8, 0xFE34C9A0, 0x26CC8413, 0x93404397, 0x4DB03556, 0x63303839, 0x2CECB51F, 0x94824E14, 0x0B986377,
    0x30A4BE79, 0xA8F9DAFA, 0x39BAE81E, 0x1095849E, 0xA4C83467, 0xC92A3A17, 0xD997817C, 0x8A7AC61C, 0x3FF414DA, 0x37B7D66E, 0x949C0AEC,
    0x858F0482, 0x24210FCC, 0x61F11C3A, 0x910B431C, 0xCBD104CC, 0xCC8DC6D2, 0x9D4A5D13, 0x3BE639A4, 0xC32BBFF1, 0x53E63ACA, 0x3AC52F2E,
    0x4709B8AE, 0x01844B14, 0x2C1EE89D, 0x075D64F6, 0x9A399FEB, 0x04E656FE, 0x3675A6F8, 0xF412078F, 0x3D0B58DA, 0x15311C1A, 0x9F8E53B3,
    0xCD6BB557, 0x2C294904, 0xB726D0BE, 0x337E2E21, 0x977DA26D, 0xD6E33270, 0x251C2CA2, 0x9DFCC702, 0x27F0755F, 0x84CFDA9A, 0xC4B8DD5F,
    0x84F1D1EB, 0x36BA45CD, 0xDC70444D, 0x8C213E4B, 0xD8F63B8A, 0xB95A2D0B, 0x4180DC91, 0x283DC063, 0xACFB92D6, 0xA4E407CD, 0xE7C8C696,
    0x89F77A00, 0x7441D4A6, 0xA8384B66, 0x6502D9B7, 0x7FC68B5B, 0x43CC607E, 0x60A14622, 0x3E110FCB, 0x43BC3C94, 0x2EF98193, 0x0CDC4A1D,
    0x310C0B64, 0xD5E55D30, 0x8D863251, 0xAB90502C, 0x3E46CC59, 0x9E886A92, 0x7CDA963B, 0x9EB16CE6, 0x2603B685, 0x29EE98F9, 0xF5206419,
    0xE03FB458, 0xEC4BD945, 0x4AA8F6BA, 0x777573CC, 0x54B32889, 0x5B1DF25E, 0xAD9FB4CD, 0x5198EE02, 0x2B2B81F3, 0x88D281D5, 0xE5BC5801,
    0x07CA01A5, 0x0665C32B, 0x552715F3, 0x35FD7626, 0x4FAD00DD, 0xD5AE45B9, 0x4832AC79, 0xCE7C511D, 0x194BC42B, 0x70EFA850, 0xBB15C201,
    0x2C5215CA, 0xBFE97CE6, 0x6B8D8734, 0xD0EE759A, 0x638AF013
  ]);

  const key = new Uint32Array([0xF0112808, 0x87C7BB01, 0xDF0FC4E1, 0x7830E0B9, 0x1FBB8BE4, 0xB2267CB9, 0x85AE25F3, 0x3B527253]);
  const iv = new Uint32Array([0x3212D579, 0xEE35452E, 0xD23E0D0C, 0x92841AA7, 0xD31B2E9B, 0xDEF2151E, 0x80D15860, 0x311C85DB]);

  const plainText = new Uint32Array([
    0xBA0D89B5, 0x3E054982, 0x8CCA27E9, 0x66B301A4, 0x8FECE2FC, 0xA5CF4D33, 0xF4A11EA8, 0x77BA4AA5, 0x73907330, 0x02000000, 0xFE000100,
    0xC71CAEB9, 0xC6B1C904, 0x8E6C522F, 0x70F13F73, 0x980D4023, 0x8E3E21C1, 0x4934D037, 0x563D930F, 0x48198A0A, 0xA7C14058, 0x229493D2,
    0x2530F4DB, 0xFA336F6E, 0x0AC92513, 0x9543AED4, 0x4CCE7C37, 0x20FD51F6, 0x9458705A, 0xC68CD4FE, 0x6B6B13AB, 0xDC974651, 0x29693284,
    0x54F18FAF, 0x8C595F64, 0x2477FE96, 0xBB2A941D, 0x5BCD1D4A, 0xC8CC4988, 0x0708FA9B, 0x378E3C4F, 0x3A9060BE, 0xE67CF9A4, 0xA4A69581,
    0x1051907E, 0x162753B5, 0x6B0F6B41, 0x0DBA74D8, 0xA84B2A14, 0xB3144E0E, 0xF1284754, 0xFD17ED95, 0x0D5965B4, 0xB9DD4658, 0x2DB1178D,
    0x169C6BC4, 0x65B0D6FF, 0x9CA3928F, 0xEF5B9AE4, 0xE418FC15, 0xE83EBEA0, 0xF87FA9FF, 0x5EED7005, 0x0DED2849, 0xF47BF959, 0xD956850C,
    0xE929851F, 0x0D8115F6, 0x35B105EE, 0x2E4E15D0, 0x4B2454BF, 0x6F4FADF0, 0x34B10403, 0x119CD8E3, 0xB92FCC5B, 0xFE000100, 0x262AABA6,
    0x21CC4DF5, 0x87DC94CF, 0x8252258C, 0x0B9337DF, 0xB47545A4, 0x9CDD5C9B, 0x8EAE7236, 0xC6CADC40, 0xB24E8859, 0x0F1CC2CC, 0x762EBF1C,
    0xF11DCC0B, 0x393CAAD6, 0xCEE4EE58, 0x48001C73, 0xACBB1D12, 0x7E4CB930, 0x72AA3D1C, 0x8151B6FB, 0x6AA6124B, 0x7CD782EA, 0xF981BDCF,
    0xCE9D7A00, 0xE423BD9D, 0x194E8AF7, 0x8EF6501F, 0x415522E4, 0x4522281C, 0x79D906DD, 0xB79C72E9, 0xC63D83FB, 0x2A940FF7, 0x79DFB5F2,
    0xFD786FB4, 0xAD71C9F0, 0x8CF48758, 0xE534E981, 0x5F634F1E, 0x3A80A5E1, 0xC2AF210C, 0x5AB76275, 0x5AD4B212, 0x6DFA61A7, 0x7FA9DA96,
    0x7D65DFD0, 0xAFB5CDF2, 0x6C4D4E1A, 0x88B180F4, 0xE0D0B45B, 0xA1484F95, 0xCB2712B5, 0x0BF3F596, 0x8D9D55C9, 0x9C0FB9FB, 0x67BFF56D,
    0x7D4481B6, 0x34514FBA, 0x3488C4CD, 0xA2FC0659, 0x990E8E86, 0x8B286328, 0x75A9AA70, 0x3BCDCE8F, 0xCB7AE551
  ]);

  expect(new AES_IGE(key, iv).decrypt(cipherText)).toEqual(plainText);
});
